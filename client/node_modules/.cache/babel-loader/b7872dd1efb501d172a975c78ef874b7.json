{"ast":null,"code":"var _jsxFileName = \"/Users/Jack/Documents/MSSD/633/parkhere/client/src/pages/Calendar/index.js\";\nimport React from \"react\";\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDays: []\n    };\n  }\n\n  handleDayClick(day, {\n    selected\n  }) {\n    const selectedDays = this.state.selectedDays;\n\n    if (selected) {\n      const selectedIndex = selectedDays.findIndex(selectedDay => DateUtils.isSameDay(selectedDay, day));\n      selectedDays.splice(selectedIndex, 1);\n    } else {\n      selectedDays.push(day);\n    }\n\n    this.setState({\n      selectedDays\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DayPicker, {\n        selectedDays: this.state.selectedDays,\n        onDayClick: this.handleDayClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/Jack/Documents/MSSD/633/parkhere/client/src/pages/Calendar/index.js"],"names":["React","DayPicker","DateUtils","Calendar","Component","constructor","props","handleDayClick","bind","state","selectedDays","day","selected","selectedIndex","findIndex","selectedDay","isSameDay","splice","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,kBAArC;AACA,OAAO,gCAAP;;AAEA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDH,EAAAA,cAAc,CAACI,GAAD,EAAM;AAAEC,IAAAA;AAAF,GAAN,EAAoB;AAAA,UACxBF,YADwB,GACP,KAAKD,KADE,CACxBC,YADwB;;AAEhC,QAAIE,QAAJ,EAAc;AACZ,YAAMC,aAAa,GAAGH,YAAY,CAACI,SAAb,CAAuBC,WAAW,IACtDb,SAAS,CAACc,SAAV,CAAoBD,WAApB,EAAiCJ,GAAjC,CADoB,CAAtB;AAGAD,MAAAA,YAAY,CAACO,MAAb,CAAoBJ,aAApB,EAAmC,CAAnC;AACD,KALD,MAKO;AACLH,MAAAA,YAAY,CAACQ,IAAb,CAAkBP,GAAlB;AACD;;AACD,SAAKQ,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,YAAY,EAAE,KAAKX,KAAL,CAAWC,YAD3B;AAEE,QAAA,UAAU,EAAE,KAAKH;AAFnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA/BmD","sourcesContent":["import React from \"react\";\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\n\nexport default class Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDays: []\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n    const { selectedDays } = this.state;\n    if (selected) {\n      const selectedIndex = selectedDays.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      selectedDays.splice(selectedIndex, 1);\n    } else {\n      selectedDays.push(day);\n    }\n    this.setState({ selectedDays });\n  }\n\n  render() {\n    return (\n      <div>\n        <DayPicker\n          selectedDays={this.state.selectedDays}\n          onDayClick={this.handleDayClick}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}