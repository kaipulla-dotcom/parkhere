{"ast":null,"code":"var _jsxFileName = \"/Users/Jack/Documents/MSSD/633/parkhere/client/src/components/ListingCard/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport API from \"../../util/API\";\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  },\n  card: {\n    minWidth: 300,\n    maxWidth: 300,\n    minHeight: 400,\n    maxHeight: 400,\n    margin: \"8px\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  dialog: {\n    minWidth: 500,\n    minHeight: 275,\n    textAlign: \"center\"\n  }\n});\n\nclass ListingCard extends React.Component {\n  // only get avail when modal opens\n  // avail modal should be class component\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      open2: false,\n      title: this.props.title,\n      address: this.props.address,\n      city: this.props.city,\n      state: this.props.state,\n      zip: this.props.zip,\n      currentModalId: this.props.id,\n      //Material UI card\n      openDeleteConfirm: false,\n      expanded: false,\n      selectedDays: [],\n      deleteListingPopuUpShown: false,\n      initialAvailabilities: [] //figure out which avails to create/delete\n\n    };\n\n    this.componentDidMount = () => {\n      API.getAvailabilitiesByListingId(this.props.id).then(res => {\n        const selectedDays = res.data.map(day => new Date(day.date));\n        this.setState({\n          selectedDays: [...selectedDays],\n          initialAvailabilities: [...res.data]\n        });\n      }).catch(err => console.log(\"ListingCard.componentDidMount err\", err));\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClickOpen2 = () => {\n      this.setState({\n        open2: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleClose2 = () => {\n      this.setState({\n        open2: false\n      });\n    };\n\n    this.showDeleteListing = () => {\n      this.setState({\n        deleteListingPopuUpShown: true\n      });\n    };\n\n    this.hideDeleteListing = () => {\n      this.setState({\n        deleteListingPopuUpShown: false\n      });\n    };\n\n    this.deleteListing = id => {\n      API.deleteListing(id).then(res => {\n        this.props.loadListings();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      let value = event.target.value;\n      let name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleDateSubmit = event => {\n      const currentSet = this.state.selectedDays;\n      const initialSelectedDays = this.state.initialAvailabilities.map(day => new Date(day.date));\n      const initialSet = initialSelectedDays;\n      const removedElements = [...initialSet].filter(initialElement => {\n        let found = true;\n        currentSet.forEach(currentElement => {\n          if (DateUtils.isSameDay(initialElement, currentElement)) {\n            found = false;\n          }\n        });\n        return found;\n      });\n      const addedElements = [...currentSet].filter(currentElement => {\n        let found = true;\n        initialSet.forEach(initialElement => {\n          if (DateUtils.isSameDay(initialElement, currentElement)) {\n            found = false;\n          }\n        });\n        return found;\n      });\n      addedElements.forEach(day => {\n        API.createAvailability({\n          date: day,\n          listing: this.props.id // .map over all selected dates in array and create a new row in the avail collection for each date and include the the the id of listing\n\n        });\n      });\n      removedElements.forEach(day => {\n        const availability = this.state.initialAvailabilities.find(avail => {\n          return DateUtils.isSameDay(new Date(avail.date), new Date(day));\n        });\n        API.deleteAvailability(availability._id);\n      });\n      this.setState({\n        open2: false\n      });\n    };\n\n    this.handleListingUpdate = event => {\n      this.setState({\n        open: false\n      });\n      API.editListing(this.state).then(res => {\n        this.props.loadListings();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDelete = id => {\n      API.deleteListing(id).then(res => {\n        this.props.loadListings();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleExpandClick = () => {\n      this.setState(state => ({\n        expanded: !state.expanded\n      }));\n    };\n\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      open: false,\n      open2: false,\n      title: this.props.title,\n      address: this.props.address,\n      city: this.props.city,\n      state: this.props.state,\n      zipcode: this.props.zipcode,\n      currentModalId: this.props.id,\n      //Material UI card\n      expanded: false,\n      selectedDays: []\n    };\n  }\n\n  handleDayClick(day, {\n    selected\n  }) {\n    const selectedDays = this.state.selectedDays;\n\n    if (selected) {\n      const selectedIndex = selectedDays.findIndex(selectedDay => DateUtils.isSameDay(selectedDay, day));\n      selectedDays.splice(selectedIndex, 1);\n    } else {\n      selectedDays.push(day);\n    }\n\n    this.setState({\n      selectedDays\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: this.props.photo,\n        title: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n        title: this.props.title,\n        subheader: this.props.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        className: classes.actions,\n        disableActionSpacing: true,\n        style: {\n          position: \"absolute\",\n          bottom: \"10px\",\n          left: \"0\",\n          right: \"0\",\n          margin: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Edit Listing\",\n          title: \"Edit\",\n          onClick: () => this.handleClickOpen(),\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Edit Availability\",\n          title: \"Availability\",\n          onClick: () => this.handleClickOpen2(),\n          children: /*#__PURE__*/_jsxDEV(DateRangeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delete Listing\",\n          title: \"Delete\",\n          onClick: () => this.showDeleteListing(),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        style: {\n          fontFamily: \"Roboto\"\n        },\n        handleClickOpen: this.handleClickOpen,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          style: {\n            fontFamily: \"Roboto\",\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            style: {\n              color: \"93b7be\",\n              width: 75,\n              height: 75,\n              marginTop: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#93b7be\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: \"EDIT LISTING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.container,\n            noValidate: true,\n            autoComplete: \"off\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              name: \"title\",\n              type: \"text\",\n              fullWidth: true,\n              value: this.state.title,\n              onChange: this.handleInputChange,\n              label: \"Title\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\" // id=\"name\"\n              ,\n              name: \"address\" // label=\"Email Address\"\n              ,\n              type: \"text\",\n              fullWidth: true,\n              value: this.state.address,\n              onChange: this.handleInputChange,\n              label: \"Address\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\",\n              name: \"city\",\n              type: \"text\",\n              fullWidth: true,\n              value: this.state.city,\n              onChange: this.handleInputChange,\n              label: \"City\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\" // id=\"name\"\n              ,\n              name: \"state\" // label=\"Email Address\"\n              ,\n              type: \"text\",\n              fullWidth: true,\n              value: this.state.state,\n              onChange: this.handleInputChange,\n              label: \"State\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              autoFocus: true,\n              margin: \"dense\" // id=\"name\"\n              ,\n              name: \"zip\" // label=\"Email Address\"\n              ,\n              type: \"text\",\n              fullWidth: true,\n              value: this.state.zip,\n              onChange: this.handleInputChange,\n              label: \"Zipcode\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleListingUpdate(),\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleClose(),\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        style: {\n          fontFamily: \"Roboto\"\n        },\n        open: this.state.deleteListingPopuUpShown,\n        handleClickOpen: this.showDeleteListing,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            color: \"#93b7be\",\n            fontFamily: \"Roboto\"\n          },\n          id: \"form-dialog-title\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            style: {\n              color: \"93b7be\",\n              width: 75,\n              height: 75,\n              marginTop: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: classes.dialog,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontFamily: \"Roboto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#93b7be\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            },\n            children: \"CONFIRMATION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 0,\n            style: {\n              padding: \"10px 60px\",\n              border: \"1px solid  #93b7be\",\n              marginTop: 20\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: \"#545454\"\n              },\n              children: [\"Do you want to delete this listing?\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.deleteListing(this.state.currentModalId),\n            color: \"primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.hideDeleteListing(),\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        style: {\n          fontFamily: \"Roboto\"\n        },\n        open: this.state.open2,\n        handleClickOpen: this.handleClickOpen2,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          style: {\n            fontFamily: \"Roboto\",\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(DateRangeIcon, {\n            style: {\n              color: \"93b7be\",\n              width: 75,\n              height: 75,\n              marginTop: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          className: classes.dialog,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              color: \"#93b7be\",\n              fontSize: 20,\n              fontWeight: \"bold\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: \"EDIT AVAILABILITY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DayPicker, {\n              selectedDays: this.state.selectedDays,\n              onDayClick: this.handleDayClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleDateSubmit(),\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleClose2(),\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nListingCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ListingCard);","map":{"version":3,"sources":["/Users/Jack/Documents/MSSD/633/parkhere/client/src/components/ListingCard/index.js"],"names":["React","PropTypes","withStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","API","DayPicker","DateUtils","Card","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","red","DeleteIcon","EditIcon","DateRangeIcon","AttachMoneyIcon","styles","theme","button","margin","spacing","unit","input","display","card","minWidth","maxWidth","minHeight","maxHeight","media","height","paddingTop","actions","justifyContent","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","dialog","textAlign","ListingCard","Component","constructor","props","state","open","open2","title","address","city","zip","currentModalId","id","openDeleteConfirm","expanded","selectedDays","deleteListingPopuUpShown","initialAvailabilities","componentDidMount","getAvailabilitiesByListingId","then","res","data","map","day","Date","date","setState","catch","err","console","log","handleClickOpen","handleClickOpen2","handleClose","handleClose2","showDeleteListing","hideDeleteListing","deleteListing","loadListings","handleInputChange","event","value","target","name","handleDateSubmit","currentSet","initialSelectedDays","initialSet","removedElements","filter","initialElement","found","forEach","currentElement","isSameDay","addedElements","createAvailability","listing","availability","find","avail","deleteAvailability","_id","handleListingUpdate","editListing","handleDelete","handleExpandClick","handleDayClick","bind","zipcode","selected","selectedIndex","findIndex","selectedDay","splice","push","render","classes","position","photo","bottom","left","right","fontFamily","color","width","marginTop","fontSize","fontWeight","container","flexDirection","alignItems","padding","border","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport API from \"../../util/API\";\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: \"none\"\n  },\n  card: {\n    minWidth: 300,\n    maxWidth: 300,\n    minHeight: 400,\n    maxHeight: 400,\n    margin: \"8px\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  dialog: {\n    minWidth: 500,\n    minHeight: 275,\n    textAlign: \"center\"\n  }\n});\n\nclass ListingCard extends React.Component {\n  state = {\n    open: false,\n    open2: false,\n    title: this.props.title,\n    address: this.props.address,\n    city: this.props.city,\n    state: this.props.state,\n    zip: this.props.zip,\n    currentModalId: this.props.id,\n    //Material UI card\n    openDeleteConfirm: false,\n    expanded: false,\n    selectedDays: [],\n    deleteListingPopuUpShown: false,\n    initialAvailabilities: [] //figure out which avails to create/delete\n  };\n\n  // only get avail when modal opens\n  // avail modal should be class component\n  componentDidMount = () => {\n    API.getAvailabilitiesByListingId(this.props.id)\n      .then(res => {\n        const selectedDays = res.data.map(day => new Date(day.date));\n        this.setState({\n          selectedDays: [...selectedDays],\n          initialAvailabilities: [...res.data]\n        });\n      })\n      .catch(err => console.log(\"ListingCard.componentDidMount err\", err));\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClickOpen2 = () => {\n    this.setState({ open2: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleClose2 = () => {\n    this.setState({ open2: false });\n  };\n\n  showDeleteListing = () => {\n    this.setState({\n      deleteListingPopuUpShown: true\n    });\n  };\n\n  hideDeleteListing = () => {\n    this.setState({\n      deleteListingPopuUpShown: false\n    });\n  };\n\n  deleteListing = id => {\n    API.deleteListing(id)\n      .then(res => {\n        this.props.loadListings();\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleDateSubmit = event => {\n    const currentSet = this.state.selectedDays;\n\n    const initialSelectedDays = this.state.initialAvailabilities.map(\n      day => new Date(day.date)\n    );\n    const initialSet = initialSelectedDays;\n\n    const removedElements = [...initialSet].filter(initialElement => {\n      let found = true;\n      currentSet.forEach(currentElement => {\n        if (DateUtils.isSameDay(initialElement, currentElement)) {\n          found = false;\n        }\n      });\n      return found;\n    });\n    const addedElements = [...currentSet].filter(currentElement => {\n      let found = true;\n      initialSet.forEach(initialElement => {\n        if (DateUtils.isSameDay(initialElement, currentElement)) {\n          found = false;\n        }\n      });\n      return found;\n    });\n\n    addedElements.forEach(day => {\n      API.createAvailability({\n        date: day,\n        listing: this.props.id\n        // .map over all selected dates in array and create a new row in the avail collection for each date and include the the the id of listing\n      });\n    });\n    removedElements.forEach(day => {\n      const availability = this.state.initialAvailabilities.find(avail => {\n        return DateUtils.isSameDay(new Date(avail.date), new Date(day));\n      });\n      API.deleteAvailability(availability._id);\n    });\n    this.setState({ open2: false });\n  };\n\n  handleListingUpdate = event => {\n    this.setState({ open: false });\n    API.editListing(this.state)\n      .then(res => {\n        this.props.loadListings();\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  handleDelete = id => {\n    API.deleteListing(id)\n      .then(res => {\n        this.props.loadListings();\n      })\n      .catch(err => console.log(err));\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      open: false,\n      open2: false,\n      title: this.props.title,\n      address: this.props.address,\n      city: this.props.city,\n      state: this.props.state,\n      zipcode: this.props.zipcode,\n      currentModalId: this.props.id,\n      //Material UI card\n      expanded: false,\n      selectedDays: []\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n    const { selectedDays } = this.state;\n    if (selected) {\n      const selectedIndex = selectedDays.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      selectedDays.splice(selectedIndex, 1);\n    } else {\n      selectedDays.push(day);\n    }\n    this.setState({ selectedDays });\n  }\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className={classes.card} style={{ position: \"relative\" }}>\n        <CardMedia\n          className={classes.media}\n          image={this.props.photo}\n          title={this.props.title}\n        />\n        <CardHeader title={this.props.title} subheader={this.props.address} />\n        <CardContent></CardContent>\n        <CardActions\n          className={classes.actions}\n          disableActionSpacing\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n            left: \"0\",\n            right: \"0\",\n            margin: \"auto\"\n          }}\n        >\n          <IconButton\n            aria-label=\"Edit Listing\"\n            title=\"Edit\"\n            onClick={() => this.handleClickOpen()}\n          >\n            <EditIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"Edit Availability\"\n            title=\"Availability\"\n            onClick={() => this.handleClickOpen2()}\n          >\n            <DateRangeIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"Delete Listing\"\n            title=\"Delete\"\n            onClick={() => this.showDeleteListing()}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </CardActions>\n\n        <Dialog\n          open={this.state.open}\n          style={{ fontFamily: \"Roboto\" }}\n          handleClickOpen={this.handleClickOpen}\n        >\n          <DialogTitle\n            id=\"form-dialog-title\"\n            style={{\n              fontFamily: \"Roboto\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}\n          >\n            <EditIcon\n              style={{\n                color: \"93b7be\",\n                width: 75,\n                height: 75,\n                marginTop: 20\n              }}\n            />\n          </DialogTitle>\n          <DialogContent>\n            <Typography\n              style={{\n                color: \"#93b7be\",\n                fontSize: 20,\n                fontWeight: \"bold\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              EDIT LISTING\n            </Typography>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"title\"\n                type=\"text\"\n                fullWidth\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                label=\"Title\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                // id=\"name\"\n                name=\"address\"\n                // label=\"Email Address\"\n                type=\"text\"\n                fullWidth\n                value={this.state.address}\n                onChange={this.handleInputChange}\n                label=\"Address\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"city\"\n                type=\"text\"\n                fullWidth\n                value={this.state.city}\n                onChange={this.handleInputChange}\n                label=\"City\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                // id=\"name\"\n                name=\"state\"\n                // label=\"Email Address\"\n                type=\"text\"\n                fullWidth\n                value={this.state.state}\n                onChange={this.handleInputChange}\n                label=\"State\"\n                variant=\"outlined\"\n              />\n\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                // id=\"name\"\n                name=\"zip\"\n                // label=\"Email Address\"\n                type=\"text\"\n                fullWidth\n                value={this.state.zip}\n                onChange={this.handleInputChange}\n                label=\"Zipcode\"\n                variant=\"outlined\"\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleListingUpdate()} color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={() => this.handleClose()} color=\"secondary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          style={{ fontFamily: \"Roboto\" }}\n          open={this.state.deleteListingPopuUpShown}\n          handleClickOpen={this.showDeleteListing}\n        >\n          <DialogTitle\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              color: \"#93b7be\",\n              fontFamily: \"Roboto\"\n            }}\n            id=\"form-dialog-title\"\n          >\n            <DeleteIcon\n              style={{\n                color: \"93b7be\",\n                width: 75,\n                height: 75,\n                marginTop: 20\n              }}\n            />\n          </DialogTitle>\n          <DialogContent\n            className={classes.dialog}\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontFamily: \"Roboto\"\n            }}\n          >\n            <Typography\n              style={{\n                color: \"#93b7be\",\n                fontSize: 20,\n                fontWeight: \"bold\"\n              }}\n            >\n              CONFIRMATION\n            </Typography>\n            <Card\n              elevation={0}\n              style={{\n                padding: \"10px 60px\",\n                border: \"1px solid  #93b7be\",\n                marginTop: 20\n              }}\n            >\n              <h4 style={{ color: \"#545454\" }}>\n                Do you want to delete this listing?{\" \"}\n              </h4>\n            </Card>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => this.deleteListing(this.state.currentModalId)}\n              color=\"primary\"\n            >\n              Delete\n            </Button>\n            <Button onClick={() => this.hideDeleteListing()} color=\"secondary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          style={{ fontFamily: \"Roboto\" }}\n          open={this.state.open2}\n          handleClickOpen={this.handleClickOpen2}\n        >\n          <DialogTitle\n            id=\"form-dialog-title\"\n            style={{\n              fontFamily: \"Roboto\",\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}\n          >\n            <DateRangeIcon\n              style={{\n                color: \"93b7be\",\n                width: 75,\n                height: 75,\n                marginTop: 20\n              }}\n            />\n          </DialogTitle>\n          <DialogContent className={classes.dialog}>\n            <Typography\n              style={{\n                color: \"#93b7be\",\n                fontSize: 20,\n                fontWeight: \"bold\",\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              EDIT AVAILABILITY\n            </Typography>\n            {/* <Button onClick={() => this.handleListingUpdate()} color=\"primary\">\n      Submit\n    </Button> */}\n            <div>\n              <DayPicker\n                selectedDays={this.state.selectedDays}\n                onDayClick={this.handleDayClick}\n              />\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => this.handleDateSubmit()} color=\"primary\">\n              Submit\n            </Button>\n            <Button onClick={() => this.handleClose2()} color=\"secondary\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Card>\n    );\n  }\n}\n\nListingCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ListingCard);\n"]},"metadata":{},"sourceType":"module"}